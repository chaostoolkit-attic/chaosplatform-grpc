# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import scheduler_pb2 as scheduler_dot_scheduler__pb2


class SchedulerServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Schedule = channel.unary_unary(
        '/chaosplatform.schedule.SchedulerService/Schedule',
        request_serializer=scheduler_dot_scheduler__pb2.ScheduleRequest.SerializeToString,
        response_deserializer=scheduler_dot_scheduler__pb2.ScheduleReply.FromString,
        )
    self.Cancel = channel.unary_unary(
        '/chaosplatform.schedule.SchedulerService/Cancel',
        request_serializer=scheduler_dot_scheduler__pb2.CancelRequest.SerializeToString,
        response_deserializer=scheduler_dot_scheduler__pb2.CancelReply.FromString,
        )


class SchedulerServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Schedule(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Cancel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SchedulerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Schedule': grpc.unary_unary_rpc_method_handler(
          servicer.Schedule,
          request_deserializer=scheduler_dot_scheduler__pb2.ScheduleRequest.FromString,
          response_serializer=scheduler_dot_scheduler__pb2.ScheduleReply.SerializeToString,
      ),
      'Cancel': grpc.unary_unary_rpc_method_handler(
          servicer.Cancel,
          request_deserializer=scheduler_dot_scheduler__pb2.CancelRequest.FromString,
          response_serializer=scheduler_dot_scheduler__pb2.CancelReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'chaosplatform.schedule.SchedulerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
